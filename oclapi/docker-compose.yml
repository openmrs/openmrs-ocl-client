version: '3'

services:
  db:
    image: postgres:12.3-alpine
    restart: "unless-stopped"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD-Postgres123}
    healthcheck:
      test: "pg_isready -U postgres"
  redis:
    image: redis:6.0.6-alpine
    restart: "unless-stopped"
    healthcheck:
      test: "redis-cli ping"
  api:
    image: openconceptlab/oclapi2:${ENVIRONMENT-production}
    restart: "unless-stopped"
    ports:
      - 8000:8000
    depends_on:
      - db
      # do not depend on other services so tests and pylint uses less memory
    environment:
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PORT=${REDIS_PORT-6379}
      - DB_HOST=${DB_HOST-db}
      - DB_PORT=${DB_PORT-5432}
      - DB_PASSWORD=${DB_PASSWORD-Postgres123}
      - ES_HOST=${ES_HOST-es}
      - ES_PORT=${ES_PORT-9200}
      - ENVIRONMENT=${ENVIRONMENT-production}
      - DEBUG=True #needed to be able to serve staticfiles with Django server
      - SECRET_KEY
      - SENTRY_DSN_KEY
      - API_SUPERUSER_PASSWORD=${API_SUPERUSER_PASSWORD-Root123}
      - API_SUPERUSER_TOKEN=${API_SUPERUSER_TOKEN-891b4b17feab99f3ff7e5b5d04ccc5da7aa96da6}
      - API_BASE_URL=${API_BASE_URL-http://localhost:8000}
      - API_INTERNAL_BASE_URL=${API_INTERNAL_BASE_URL-http://api:8000}
      - EMAIL_NOREPLY_PASSWORD
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_STORAGE_BUCKET_NAME
      - AWS_REGION_NAME
    healthcheck:
      test: "curl --silent --fail http://localhost:8000/version/ || exit 1"
  celery:
    image: openconceptlab/oclapi2:${ENVIRONMENT-production}
    command: ["bash", "-c", "CELERY_WORKER_NAME=default ./start_celery_worker.sh -P prefork -Q default --autoscale=10,2"]
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "-c", "CELERY_WORKER_NAME=default ./ping_celery_worker.sh"]
    environment:
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PORT=${REDIS_PORT-6379}
      - DEBUG=${DEBUG-False}
  celery_indexing:
    image: openconceptlab/oclapi2:${ENVIRONMENT-production}
    command: ["bash", "-c", "CELERY_WORKER_NAME=indexing ./start_celery_worker.sh -P prefork -Q indexing --autoscale=10,2"]
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "-c", "CELERY_WORKER_NAME=indexing ./ping_celery_worker.sh"]
    environment:
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PORT=${REDIS_PORT-6379}
      - DEBUG=${DEBUG-False}
  celery_concurrent:
    image: openconceptlab/oclapi2:${ENVIRONMENT-production}
    command: ["bash", "-c", "CELERY_WORKER_NAME=concurrent ./start_celery_worker.sh -P prefork -Q concurrent -c 10"]
    restart: "unless-stopped"
    healthcheck:
      test:  ["CMD-SHELL", "-c", "CELERY_WORKER_NAME=concurrent ./ping_celery_worker.sh"]
    environment:
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PORT=${REDIS_PORT-6379}
      - DEBUG=${DEBUG-False}
  flower:
    image: openconceptlab/oclapi2:${ENVIRONMENT-production}
    command: ["bash", "-c", "./start_flower.sh"]
    ports:
      - 5555:5555
    depends_on:
      - redis
    environment:
      - FLOWER_USER=${FLOWER_USER-root}
      - FLOWER_PASSWORD=${FLOWER_PASSWORD-Root123}
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PORT=${REDIS_PORT-6379}
    restart: "unless-stopped"
    healthcheck:
      test: "curl --silent --fail -u $${FLOWER_USER:-root}:$${FLOWER_PASSWORD:-Root123} http://localhost:5555/metrics || exit 1"
  es:
    image: elasticsearch:7.8.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: "unless-stopped"
    healthcheck:
      test: "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"

